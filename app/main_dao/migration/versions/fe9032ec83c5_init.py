"""init

Revision ID: fe9032ec83c5
Revises: 
Create Date: 2025-04-01 14:04:05.302868

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fe9032ec83c5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("CREATE SEQUENCE IF NOT EXISTS tg_user_id_seq")
    op.execute("CREATE SEQUENCE IF NOT EXISTS admin_account_id_seq")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tg_user',
    sa.Column('id', sa.BigInteger(), server_default=sa.text("nextval('tg_user_id_seq')"), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('registration_param', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_table('admin_account',
    sa.Column('id', sa.BigInteger(), server_default=sa.text("nextval('admin_account_id_seq')"), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('permission_level', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['telegram_id'], ['tg_user.telegram_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_account_telegram_id'), 'admin_account', ['telegram_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    op.execute("DROP SEQUENCE IF EXISTS tg_user_id_seq")
    op.execute("DROP SEQUENCE IF EXISTS admin_account_id_seq")

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_admin_account_telegram_id'), table_name='admin_account')
    op.drop_table('admin_account')
    op.drop_table('tg_user')
    # ### end Alembic commands ###
